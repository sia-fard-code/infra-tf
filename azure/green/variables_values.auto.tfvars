# Authors     : Derek Ouzia.
# Purpose     : IAC for Masimo green environment.
# Description : Terraform template that contains the configuration of the infrastructure for Masimo's green environment.  


# Virtual network address space
vnet_address_space = ["172.19.0.0/16"] 

# Default subnet address prefix
default_subnet_address_prefix = ["172.19.0.0/24"]  

# Application gateway subnet address prefix
appGateway_subnet_address_prefix = ["172.19.1.0/24"] 

# Load balancer subnet address prefix
loadBalancer_subnet_address_prefix = ["172.19.4.0/24"]

# API subnet address prefix
apiVm_subnet_address_prefix = ["172.19.3.0/24"]

# Web server subnet address prefix
webVm_subnet_address_prefix = ["172.19.2.0/24"]

# Bastion service subnet address prefix
bastion_subnet_address_prefix = ["172.19.5.0/27"]


# This script does not apply to DR, only production
# Ecoded script to be run on the API servers
/*
api_server_script = 
""
*/

# This script does not apply to DR, only production
# Ecoded script to be run on the web servers
/*
web_server_script = "" 
*/

